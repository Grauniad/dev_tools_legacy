#include <string>
#include <iostream>
#include "stdReader.h"
#include "binaryDescribe.h"
#include <sstream>
#include "tester.h"
using namespace std;
string expected() {
    static stringstream s("");
    if ( s.str() == "" ) {
        s << "00000000  7f 45 4c 46 02 01 01 00  00 00 00 00 00 00 00 00  |.ELF............|" << endl;
        s << "00000010  01 00 3e 00 01 00 00 00  00 00 00 00 00 00 00 00  |..>.............|" << endl;
        s << "00000020  00 00 00 00 00 00 00 00  20 01 00 00 00 00 00 00  |........ .......|" << endl;
        s << "00000030  00 00 00 00 40 00 00 00  00 00 40 00 0b 00 08 00  |....@.....@.....|" << endl;
        s << "00000040  55 48 89 e5 89 f8 88 45  fc 80 7d fc 79 74 06 80  |UH.....E..}.yt..|" << endl;
        s << "00000050  7d fc 59 75 07 b8 00 00  00 00 eb 05 b8 01 00 00  |}.Yu............|" << endl;
        s << "00000060  00 5d c3 00 00 47 43 43  3a 20 28 55 62 75 6e 74  |.]...GCC: (Ubunt|" << endl;
        s << "00000070  75 2f 4c 69 6e 61 72 6f  20 34 2e 36 2e 33 2d 31  |u/Linaro 4.6.3-1|" << endl;
        s << "00000080  75 62 75 6e 74 75 35 29  20 34 2e 36 2e 33 00 00  |ubuntu5) 4.6.3..|" << endl;
        s << "00000090  14 00 00 00 00 00 00 00  01 7a 52 00 01 78 10 01  |.........zR..x..|" << endl;
        s << "000000a0  1b 0c 07 08 90 01 00 00  1c 00 00 00 1c 00 00 00  |................|" << endl;
        s << "000000b0  00 00 00 00 23 00 00 00  00 41 0e 10 86 02 43 0d  |....#....A....C.|" << endl;
        s << "000000c0  06 5e 0c 07 08 00 00 00  00 2e 73 79 6d 74 61 62  |.^........symtab|" << endl;
        s << "000000d0  00 2e 73 74 72 74 61 62  00 2e 73 68 73 74 72 74  |..strtab..shstrt|" << endl;
        s << "000000e0  61 62 00 2e 74 65 78 74  00 2e 64 61 74 61 00 2e  |ab..text..data..|" << endl;
        s << "000000f0  62 73 73 00 2e 63 6f 6d  6d 65 6e 74 00 2e 6e 6f  |bss..comment..no|" << endl;
        s << "00000100  74 65 2e 47 4e 55 2d 73  74 61 63 6b 00 2e 72 65  |te.GNU-stack..re|" << endl;
        s << "00000110  6c 61 2e 65 68 5f 66 72  61 6d 65 00 00 00 00 00  |la.eh_frame.....|" << endl;
        s << "00000120  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "00000130  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "00000140  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "00000150  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "00000160  1b 00 00 00 01 00 00 00  06 00 00 00 00 00 00 00  |................|" << endl;
        s << "00000170  00 00 00 00 00 00 00 00  40 00 00 00 00 00 00 00  |........@.......|" << endl;
        s << "00000180  23 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |#...............|" << endl;
        s << "00000190  04 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "000001a0  21 00 00 00 01 00 00 00  03 00 00 00 00 00 00 00  |!...............|" << endl;
        s << "000001b0  00 00 00 00 00 00 00 00  64 00 00 00 00 00 00 00  |........d.......|" << endl;
        s << "000001c0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "000001d0  04 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "000001e0  27 00 00 00 08 00 00 00  03 00 00 00 00 00 00 00  |'...............|" << endl;
        s << "000001f0  00 00 00 00 00 00 00 00  64 00 00 00 00 00 00 00  |........d.......|" << endl;
        s << "00000200  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "00000210  04 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "00000220  2c 00 00 00 01 00 00 00  30 00 00 00 00 00 00 00  |,.......0.......|" << endl;
        s << "00000230  00 00 00 00 00 00 00 00  64 00 00 00 00 00 00 00  |........d.......|" << endl;
        s << "00000240  2b 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |+...............|" << endl;
        s << "00000250  01 00 00 00 00 00 00 00  01 00 00 00 00 00 00 00  |................|" << endl;
        s << "00000260  35 00 00 00 01 00 00 00  00 00 00 00 00 00 00 00  |5...............|" << endl;
        s << "00000270  00 00 00 00 00 00 00 00  8f 00 00 00 00 00 00 00  |................|" << endl;
        s << "00000280  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "00000290  01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "000002a0  4a 00 00 00 01 00 00 00  02 00 00 00 00 00 00 00  |J...............|" << endl;
        s << "000002b0  00 00 00 00 00 00 00 00  90 00 00 00 00 00 00 00  |................|" << endl;
        s << "000002c0  38 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |8...............|" << endl;
        s << "000002d0  08 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "000002e0  45 00 00 00 04 00 00 00  00 00 00 00 00 00 00 00  |E...............|" << endl;
        s << "000002f0  00 00 00 00 00 00 00 00  c8 04 00 00 00 00 00 00  |................|" << endl;
        s << "00000300  18 00 00 00 00 00 00 00  09 00 00 00 06 00 00 00  |................|" << endl;
        s << "00000310  08 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00  |................|" << endl;
        s << "00000320  11 00 00 00 03 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "00000330  00 00 00 00 00 00 00 00  c8 00 00 00 00 00 00 00  |................|" << endl;
        s << "00000340  54 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |T...............|" << endl;
        s << "00000350  01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "00000360  01 00 00 00 02 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "00000370  00 00 00 00 00 00 00 00  e0 03 00 00 00 00 00 00  |................|" << endl;
        s << "00000380  d8 00 00 00 00 00 00 00  0a 00 00 00 08 00 00 00  |................|" << endl;
        s << "00000390  08 00 00 00 00 00 00 00  18 00 00 00 00 00 00 00  |................|" << endl;
        s << "000003a0  09 00 00 00 03 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "000003b0  00 00 00 00 00 00 00 00  b8 04 00 00 00 00 00 00  |................|" << endl;
        s << "000003c0  0f 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "000003d0  01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "000003e0  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "000003f0  00 00 00 00 00 00 00 00  01 00 00 00 04 00 f1 ff  |................|" << endl;
        s << "00000400  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "00000410  00 00 00 00 03 00 01 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "00000420  00 00 00 00 00 00 00 00  00 00 00 00 03 00 02 00  |................|" << endl;
        s << "00000430  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "00000440  00 00 00 00 03 00 03 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "00000450  00 00 00 00 00 00 00 00  00 00 00 00 03 00 05 00  |................|" << endl;
        s << "00000460  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "00000470  00 00 00 00 03 00 06 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "00000480  00 00 00 00 00 00 00 00  00 00 00 00 03 00 04 00  |................|" << endl;
        s << "00000490  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "000004a0  09 00 00 00 12 00 01 00  00 00 00 00 00 00 00 00  |................|" << endl;
        s << "000004b0  23 00 00 00 00 00 00 00  00 69 73 59 65 73 2e 63  |#........isYes.c|" << endl;
        s << "000004c0  00 69 73 59 65 73 00 00  20 00 00 00 00 00 00 00  |.isYes.. .......|" << endl;
        s << "000004d0  02  |.|" << endl;
    }
    return s.str();
}

int VerifyRead(testLogger& log);

int main(int argc, const char *argv[])
{
    Test("Test describe", (loggedTest)VerifyRead).RunTest();
    return 0;
}

int VerifyRead(testLogger& log) {
    IFStreamReader file("../binaryDescribe/isYes/isYes.o");
    BinaryReader reader(file);
    string got = BinaryDescribe::Describe(reader,0x4d1);
    log << " Expected: " << endl;
    log << expected() << endl;
    log << " ************************************************** " << endl;
    log << " Got: " << endl;
    log <<  got << endl;
    log << " ************************************************** " << endl;
    for ( int i=0; i<static_cast<int>(expected().length()); i++ ) {
        if ( expected()[i] != got[i] ) {
            log << "Failure at " << i << " of " << expected().length() << endl;
            return 1;
        }
    }
    return 0;
}
